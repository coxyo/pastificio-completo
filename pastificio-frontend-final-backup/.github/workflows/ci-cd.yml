name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install Backend Dependencies
      working-directory: ./pastificio-backend
      run: npm ci
    
    - name: Run Backend Tests
      working-directory: ./pastificio-backend
      run: npm run test:ci
      env:
        NODE_ENV: test
        MONGODB_URI: ${{ secrets.MONGODB_URI }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install Frontend Dependencies
      working-directory: ./pastificio-frontend-final
      run: npm ci --legacy-peer-deps
    
    - name: Run Frontend Tests
      working-directory: ./pastificio-frontend-final
      run: npm run test:ci
    
    - name: Build Frontend
      working-directory: ./pastificio-frontend-final
      run: npm run build

  e2e-tests:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install Dependencies
      run: |
        cd pastificio-backend && npm ci
        cd ../pastificio-frontend-final && npm ci --legacy-peer-deps
    
    - name: Start Backend
      working-directory: ./pastificio-backend
      run: |
        npm start &
        npx wait-on http://localhost:5000
      env:
        NODE_ENV: test
        MONGODB_URI: ${{ secrets.MONGODB_URI }}
    
    - name: Start Frontend & Run Cypress
      working-directory: ./pastificio-frontend-final
      run: |
        npm run build
        npm start &
        npx wait-on http://localhost:3000
        npm run cypress:run

  deploy:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend, e2e-tests]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Production
      run: |
        echo "Deploy to production here"
        # Aggiungi comandi di deploy per Vercel/Render